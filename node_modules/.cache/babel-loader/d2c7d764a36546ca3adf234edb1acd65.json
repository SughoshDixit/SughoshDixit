{"ast":null,"code":"import _slicedToArray from\"D:\\\\SughoshDixit\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,createRef}from\"react\";import\"./ExperienceCard.css\";import ColorThief from\"colorthief\";export default function ExperienceCard(_ref){var cardInfo=_ref.cardInfo;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),colorArrays=_useState2[0],setColorArrays=_useState2[1];var imgRef=createRef();function getColorArrays(){var colorThief=new ColorThief();setColorArrays(colorThief.getColor(imgRef.current));}function rgb(values){return typeof values===\"undefined\"?null:\"rgb(\"+values.join(', ')+\")\";}var GetDescBullets=function GetDescBullets(_ref2){var descBullets=_ref2.descBullets;return descBullets?descBullets.map(function(item){return/*#__PURE__*/React.createElement(\"li\",{className:\"subTitle\"},item);}):null;};return/*#__PURE__*/React.createElement(\"div\",{className:\"experience-card\"},/*#__PURE__*/React.createElement(\"div\",{style:{background:rgb(colorArrays)},className:\"experience-banner\"},/*#__PURE__*/React.createElement(\"div\",{className:\"experience-blurred_div\"}),/*#__PURE__*/React.createElement(\"div\",{className:\"experience-div-company\"},/*#__PURE__*/React.createElement(\"h5\",{className:\"experience-text-company\"},cardInfo.company)),/*#__PURE__*/React.createElement(\"img\",{crossOrigin:\"anonymous\",ref:imgRef,className:\"experience-roundedimg\",src:cardInfo.companylogo,alt:cardInfo.company,onLoad:function onLoad(){return getColorArrays();}})),/*#__PURE__*/React.createElement(\"div\",{className:\"experience-text-details\"},/*#__PURE__*/React.createElement(\"h5\",{className:\"experience-text-role\"},cardInfo.role),/*#__PURE__*/React.createElement(\"h5\",{className:\"experience-text-date\"},cardInfo.date),/*#__PURE__*/React.createElement(\"p\",{className:\"subTitle experience-text-desc\"},cardInfo.desc),/*#__PURE__*/React.createElement(\"ul\",null,/*#__PURE__*/React.createElement(GetDescBullets,{descBullets:cardInfo.descBullets}))));}","map":{"version":3,"sources":["D:/SughoshDixit/src/components/experienceCard/ExperienceCard.js"],"names":["React","useState","useEffect","createRef","ColorThief","ExperienceCard","cardInfo","colorArrays","setColorArrays","imgRef","getColorArrays","colorThief","getColor","current","rgb","values","join","GetDescBullets","descBullets","map","item","background","company","companylogo","role","date","desc"],"mappings":"4IAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,CAAqCC,SAArC,KAAsD,OAAtD,CACA,MAAO,sBAAP,CACA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,CAEA,cAAe,SAASC,CAAAA,cAAT,MAAsC,IAAZC,CAAAA,QAAY,MAAZA,QAAY,eACbL,QAAQ,CAAC,EAAD,CADK,wCAC5CM,WAD4C,eAC/BC,cAD+B,eAEnD,GAAMC,CAAAA,MAAM,CAAGN,SAAS,EAAxB,CAEA,QAASO,CAAAA,cAAT,EAA0B,CACxB,GAAMC,CAAAA,UAAU,CAAG,GAAIP,CAAAA,UAAJ,EAAnB,CACAI,cAAc,CAACG,UAAU,CAACC,QAAX,CAAoBH,MAAM,CAACI,OAA3B,CAAD,CAAd,CACD,CAED,QAASC,CAAAA,GAAT,CAAaC,MAAb,CAAqB,CACnB,MAAO,OAAOA,CAAAA,MAAP,GAAkB,WAAlB,CAAgC,IAAhC,CAAuC,OAASA,MAAM,CAACC,IAAP,CAAY,IAAZ,CAAT,CAA6B,GAA3E,CACD,CAED,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,OAAqB,IAAlBC,CAAAA,WAAkB,OAAlBA,WAAkB,CAC1C,MAAOA,CAAAA,WAAW,CAAGA,WAAW,CAACC,GAAZ,CAAgB,SAACC,IAAD,qBAAU,0BAAI,SAAS,CAAC,UAAd,EAA0BA,IAA1B,CAAV,EAAhB,CAAH,CAAqE,IAAvF,CACD,CAFD,CAIA,mBACE,2BAAK,SAAS,CAAC,iBAAf,eACE,2BAAK,KAAK,CAAE,CAACC,UAAU,CAAEP,GAAG,CAACP,WAAD,CAAhB,CAAZ,CAA6C,SAAS,CAAC,mBAAvD,eACE,2BAAK,SAAS,CAAC,wBAAf,EADF,cAEE,2BAAK,SAAS,CAAC,wBAAf,eACE,0BAAI,SAAS,CAAC,yBAAd,EAAyCD,QAAQ,CAACgB,OAAlD,CADF,CAFF,cAME,2BAAK,WAAW,CAAE,WAAlB,CAA+B,GAAG,CAAEb,MAApC,CAA4C,SAAS,CAAC,uBAAtD,CAA8E,GAAG,CAAEH,QAAQ,CAACiB,WAA5F,CAAyG,GAAG,CAAEjB,QAAQ,CAACgB,OAAvH,CAAgI,MAAM,CAAE,wBAAMZ,CAAAA,cAAc,EAApB,EAAxI,EANF,CADF,cASE,2BAAK,SAAS,CAAC,yBAAf,eACE,0BAAI,SAAS,CAAC,sBAAd,EAAsCJ,QAAQ,CAACkB,IAA/C,CADF,cAEE,0BAAI,SAAS,CAAC,sBAAd,EAAsClB,QAAQ,CAACmB,IAA/C,CAFF,cAGE,yBAAG,SAAS,CAAC,+BAAb,EAA8CnB,QAAQ,CAACoB,IAAvD,CAHF,cAIE,2CACE,oBAAC,cAAD,EAAgB,WAAW,CAAEpB,QAAQ,CAACY,WAAtC,EADF,CAJF,CATF,CADF,CAoBD","sourcesContent":["import React, { useState, useEffect, createRef } from \"react\";\r\nimport \"./ExperienceCard.css\";\r\nimport ColorThief from \"colorthief\";\r\n\r\nexport default function ExperienceCard({ cardInfo }) {\r\n  const [colorArrays, setColorArrays] = useState([]);\r\n  const imgRef = createRef();\r\n\r\n  function getColorArrays() {\r\n    const colorThief = new ColorThief();\r\n    setColorArrays(colorThief.getColor(imgRef.current));\r\n  }\r\n\r\n  function rgb(values) {\r\n    return typeof values === \"undefined\" ? null : \"rgb(\" + values.join(', ') + \")\";\r\n  }\r\n\r\n  const GetDescBullets = ({ descBullets }) => {\r\n    return descBullets ? descBullets.map((item) => <li className=\"subTitle\">{item}</li>) : null\r\n  };\r\n\r\n  return (\r\n    <div className=\"experience-card\">\r\n      <div style={{background: rgb(colorArrays) }} className=\"experience-banner\">\r\n        <div className=\"experience-blurred_div\"></div>\r\n        <div className=\"experience-div-company\">\r\n          <h5 className=\"experience-text-company\">{cardInfo.company}</h5>\r\n        </div>\r\n        \r\n        <img crossOrigin={\"anonymous\"} ref={imgRef} className=\"experience-roundedimg\" src={cardInfo.companylogo} alt={cardInfo.company} onLoad={() => getColorArrays()}/>\r\n      </div>\r\n      <div className=\"experience-text-details\">\r\n        <h5 className=\"experience-text-role\">{cardInfo.role}</h5>\r\n        <h5 className=\"experience-text-date\">{cardInfo.date}</h5>\r\n        <p className=\"subTitle experience-text-desc\">{cardInfo.desc}</p>\r\n        <ul>\r\n          <GetDescBullets descBullets={cardInfo.descBullets} />\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}